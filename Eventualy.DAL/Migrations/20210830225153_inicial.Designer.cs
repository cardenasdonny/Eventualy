// <auto-generated />
using System;
using Eventualy.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Eventualy.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210830225153_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Eventualy.Model.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("TipoDocumentoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Documento = "72284820",
                            Email = "cardenasdonny@gmail.com",
                            Estado = true,
                            Nombres = "Dony Cardenas",
                            TipoDocumentoId = 1
                        },
                        new
                        {
                            ClienteId = 2,
                            Documento = "77889966",
                            Email = "sarasofi@gmail.com",
                            Estado = true,
                            Nombres = "Sara Sofia",
                            TipoDocumentoId = 2
                        },
                        new
                        {
                            ClienteId = 3,
                            Documento = "998822",
                            Email = "samuel@gmail.com",
                            Estado = true,
                            Nombres = "Samuel",
                            TipoDocumentoId = 3
                        });
                });

            modelBuilder.Entity("Eventualy.Model.Entities.TipoDocumento", b =>
                {
                    b.Property<int>("TipoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("TipoDocumentoId");

                    b.ToTable("TiposDocumento");

                    b.HasData(
                        new
                        {
                            TipoDocumentoId = 1,
                            Nombre = "CC"
                        },
                        new
                        {
                            TipoDocumentoId = 2,
                            Nombre = "TI"
                        },
                        new
                        {
                            TipoDocumentoId = 3,
                            Nombre = "CE"
                        });
                });

            modelBuilder.Entity("Eventualy.Model.Entities.Cliente", b =>
                {
                    b.HasOne("Eventualy.Model.Entities.TipoDocumento", "TiposDocumento")
                        .WithMany("Clientes")
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TiposDocumento");
                });

            modelBuilder.Entity("Eventualy.Model.Entities.TipoDocumento", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
